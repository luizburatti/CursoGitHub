O que são dados:
Valores brutos, fatos brutos, observações, documentações que são armazenadas sem nenhum tipo de tratamento.

Informações : conjunto de dados que geram valores e geram sentido.



-- Senha do meu postgres = senha.


postgresql.conf   - ao acessar a view consegue visualizar todas as configurações atuais do banco.

select * from  pg_settings;
or  show [parametro]

se encontra dentro  da pasta  data no windows.

configurações de conexão.

Listen_addresses.
endereço tcp/ip das interfaces que o servidor PostgreSQL vai escutar e liberar as conexões.

port :  porta tcp que o servidor vai ouvir, padrao 5432 

max_connections : maximo de conexões simultaneas no seu banco.

superuser_reserved_connections. 
Slots de conexões, para super usuarios, acesso que não podem ficar sem acesso.

authentication_timeout: 
tempo maximo para o cliente conseguir a conexão ao banco.

Password_encryption. 
Algoritmo de criptografia de senhas do banco.

SSL 
Habilita a conexões criptografia por SSL. 

Shared_buffers:
Tamanho de memoria compartilhada do servidor PostgreSQL para cache/buffer de tabelas, indices e demais relações: valor padrão 25 % da capacidade da sua memoria.

Work_MEM:
Tamanho da memoria para operações de agrupamento e ordenação (order by, distinct, merge joins).

Maintenance_work_mem:
Tamanho de memoria para operações como VACUUM,INDEX, ALTER TABLE

PG_hba.conf: 
Arquivo responsavel pelas autentificações dos usuarios criados no banco 
determinam ate onde pode entrar e de qual IP e etc.

Cluster uma coleções de bancos de dados que utilizam  o mesmo banco de dados

create role professores NOCREATEDB nocreaterole inherit nologin connection limit 10;
alter role professores  password '123';
--create role daniel login password '123';
--drop role daniel;
--create role  daniel login password '123' in role professores;
--create role  daniel login password '123' in role professores;



DML - data manipulation language 
INSERT, update, delete, select 

create table teste (nome varchar) ;

grant all on table teste to professores;

select * from teste; 


DDL  -  data difinition language 
create, alter, drop 



Create table if not exists banco (
numero integer not null,
nome  varchar(50) not null,
ativo boolean  not null default true,
data_criacao timestamp  not null default current_timestamp,
primary key (numero)
);

create table if not exists agencia (
banco_numero integer not null,
numero integer not null,
nome varchar (50) not null,
ativo boolean not null default true, 
data_criacao timestamp  not null default current_timestamp,	
primary key (banco_numero,numero),
foreign key (banco_numero) references banco (numero)  	
	
);


create table if not exists cliente (
numero bigserial  primary key,
nome varchar (120) not null,
email varchar (150) not null,
ativo boolean not null default true, 
data_criacao timestamp not null default current_timestamp
) ;




create table if not exists conta_corrente (
banco_numero integer not null,
agencia_numero integer not null,
numero bigint not null,
digito smallint not null,
cliente_numero bigint not null,	
ativo boolean not null default true, 
data_criacao timestamp not null default current_timestamp,	
primary key (banco_numero,agencia_numero, numero, digito, cliente_numero),
foreign key (banco_numero,agencia_numero) references  agencia (banco_numero,numero),
foreign key (cliente_numero) references cliente (numero)	
);


create table if not exists  tipo_transacao
(
id smallserial primary key, 
nome VARCHAR (50) not null, 	
ativo boolean not null default true, 
data_criacao timestamp not null default current_timestamp
);


create table if not exists  cliente_transacoes
(
id bigserial primary key,
banco_numero integer not null,
agencia_numero integer not null,
conta_corrente_numero bigint not null,
conta_corrente_digito smallint not null,
cliente_numero bigint not null,
tipo_transacao_id smallint not null,
valor numeric (15,2) not null ,
data_criacao timestamp not null default current_timestamp,
	
foreign key (banco_numero,agencia_numero,conta_corrente_numero,conta_corrente_digito,cliente_numero)
	references conta_corrente (banco_numero,agencia_numero, numero, digito, cliente_numero)
);






